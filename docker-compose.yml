services:
  rabbitmq-server:
    container_name: rabbitmq-server
    image: rabbitmq:3.10-management-alpine
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
    networks:
      - biblioteca-net
    volumes:
      - rabbitmq-server-volume:/var/lib/rabbitmq

  redis-server:
    container_name: redis-server 
    image: redis:alpine
    restart: always
    networks:
      - biblioteca-net

  autenticacao-db:
    container_name: autenticacao-db
    image: postgres:13-alpine
    restart: always
    environment:
      - POSTGRES_PASSWORD=abc@123
      - PGDATA=/db/data
    networks:
      - biblioteca-net
    volumes:
      - autenticacao-db-volume:/db/data

  avaliacao-db:
    container_name: avaliacao-db
    image: postgres:13-alpine
    restart: always
    environment:
      - POSTGRES_PASSWORD=abc@123
      - PGDATA=/db/data
    networks:
      - biblioteca-net
    volumes:
      - avaliacao-db-volume:/db/data

  catalogo-db:
    container_name: catalogo-db
    image: postgres:13-alpine
    restart: always
    environment:
      - POSTGRES_PASSWORD=abc@123
      - PGDATA=/db/data
    networks:
      - biblioteca-net
    volumes:
      - catalogo-db-volume:/db/data

  circulacao-db:
    container_name: circulacao-db
    image: postgres:13-alpine
    restart: always
    environment:
      - POSTGRES_PASSWORD=abc@123
      - PGDATA=/db/data
    networks:
      - biblioteca-net
    volumes:
      - circulacao-db-volume:/db/data

  notificacao-db:
    container_name: notificacao-db
    image: postgres:13-alpine
    restart: always
    environment:
      - POSTGRES_PASSWORD=abc@123
      - PGDATA=/db/data
    networks:
      - biblioteca-net
    volumes:
      - notificacao-db-volume:/db/data

  autenticacao-service:
    container_name: autenticacao-service
    build:
      context: .
      dockerfile: ./services/autenticacao/Dockerfile.api
    restart: always
    networks:
      - biblioteca-net
    depends_on:
      - rabbitmq-server
      - redis-server
      - autenticacao-db

  catalogo-service:
    container_name: catalogo-service
    build:
      context: .
      dockerfile: ./services/catalogo/Dockerfile.api
    restart: always
    networks:
      - biblioteca-net
    depends_on:
      - rabbitmq-server
      - redis-server
      - catalogo-db

  autenticacao-beat:
    container_name: autenticacao-beat
    build:
      context: .
      dockerfile: ./services/autenticacao/Dockerfile.beat
    restart: always
    networks:
      - biblioteca-net
    depends_on:
      - rabbitmq-server
      - redis-server
      - autenticacao-db

  gateway-service:
    container_name: gateway-service
    build:
      context: .
      dockerfile: ./services/gateway/Dockerfile.api
    restart: always
    environment:
      - DEBUG=${DEBUG}
      - SECRET_KEY=${GATEWAY_SECRET_KEY}
      - REDIS_HOST=redis-server
      - REDIS_DB=${REDIS_DB}

      - AUTENTICACAO_TIMEOUT=2
      - AUTENTICACAO_SERVICE_URL=http://autenticacao-service:8000
      - AVALIACAO_SERVICE_URL=http://avaliacao-service:8000
      - CATALOGO_SERVICE_URL=http://catalogo-service:8000
      - CIRCULACAO_SERVICE_URL=http://circulacao-service:8000
    networks:
      biblioteca-net:
        ipv4_address: 10.77.49.200

networks:
  biblioteca-net:
    ipam:
      config:
        - subnet: 10.77.49.0/24
          ip_range: 10.77.49.0/24
          gateway: 10.77.49.250

volumes:
  rabbitmq-server-volume:
  autenticacao-db-volume:
  avaliacao-db-volume:
  catalogo-db-volume:
  circulacao-db-volume:
  notificacao-db-volume:
